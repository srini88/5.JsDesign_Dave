
///why u need to JS patterns...
/////code in a way that leverages much reuse as poosible...
////promote maintenaice of code...
/////debug and other team members might to debug them..

////large of JS api canvas, geolocation....etc...
////amount of API going to HTML is increated..

///how we avoid naming conflicts...
////when you combine that code with your code...how do you make sure..we have no conflicts....with external libreary..


1) function Spaghetti code...
bad way..there is a better way...to do it....

how to encapsulate in closures...much in the same way as classes ...

Defining variables...different ways...


1) spaghetti code....

problems....variables , fns added into global scoep...global scope..one collection area...
potential for duplicate function names 

it is not modular at alll..

no sense of a container....the file itself is a container...which is bad...

function that is conflicted with another function...which fn will be executed in the order of the script files...


this shit is the function spaghetti code...

so we need to put that shit in closures....to eliminate spaghetti code...

encapsulate and add modules to your javascript code...


closure - an inner function always has access to the vars and aprameters of its outer function, even after the outer function has returned...

you can nest functions, if you do that- changes the visibility...


